buildscript{
	ext {
		gradleAvroVersion = '0.14.2'
	}
	repositories {
		jcenter()
	}
	dependencies {
		classpath "com.commercehub.gradle.plugin:gradle-avro-plugin:${gradleAvroVersion}"
	}
}


plugins {
	id 'org.springframework.boot' version '2.2.2.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'java'
}

apply plugin: "com.commercehub.gradle.plugin.avro"

group = 'com.lucasaquiles'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}


repositories {
	mavenCentral()

	maven {
		url "http://packages.confluent.io/maven/"
	}
}

ext {
	set('springCloudVersion', "Hoxton.RELEASE")
}

dependencies {

	implementation 'org.springframework.boot:spring-boot-starter-webflux'

	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'

	implementation 'org.apache.kafka:kafka-streams'
	implementation 'org.springframework.cloud:spring-cloud-stream'
	implementation "org.springframework.cloud:spring-cloud-stream-binder-kafka"
	implementation 'org.springframework.cloud:spring-cloud-stream-binder-kafka-streams'

	compile 'io.springfox:springfox-swagger-ui:2.9.2'
	compile 'io.springfox:springfox-swagger2:2.9.2'

	implementation 'io.confluent:kafka-avro-serializer:4.0.0'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	testCompile "org.projectlombok:lombok"
	testAnnotationProcessor "org.projectlombok:lombok:"

	testImplementation 'io.projectreactor:reactor-test'

	testImplementation 'org.springframework.cloud:spring-cloud-stream-test-support'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

test {
	useJUnitPlatform()
}


task generateAvro(type: com.commercehub.gradle.plugin.avro.GenerateAvroJavaTask) {
	source("$rootDir/src/main/resources/avro")
	outputDir = file("$buildDir/com/lucasaquiles/stream")
}

sourceSets {
	main {
		java {
			srcDir file("$buildDir/com/lucasaquiles/stream")
		}
	}
}
